AbsSynthe - a tool to synthesize controllers from succinct safety
specifications. 

The tool consists of two basic algorithms to determine realizability of
specifications provided in the extended AIGER format (see
https://syntcompdb.iaik.tugraz.at/2014/rules/). The first is the classical fix
point computation algorithm implemented using BDDs. The second is a CEGAR-based
approach (run the tool with argument -a). The abstract algorithm relies on
localization reduction to refine abstractions.

Some basic configurations to try:
python synth.py = a basic fix point realizability check
python synth.py -a -i 4 -l 2 = abstract algorithm starting with 1/4 of the
	latches being visible and dropping all visible latches when 1/2 of them
	are visible

Any of the above configurations with a -o and a filename yields a synthesis
algorithm. The -m option attempts to minimize the resulting circuit even
further.

A paper explaining the theory behind the algorithms was submitted to the SYNT'14
workshop that will take place as a satellite event of CAV'14. The configurations
used for realizability in said paper were:

C = python aisy.py
C-TL = python synth.py 
A = python synth.py -a -i 4 -l 2 -t
A-TL = python synth.py -a -i -4 -l 2

Note that the first configuration uses tool aisy.py which is provided by the
organizers of the competition. For circuit synthesis the following were used:

C-TL = python synth.py
C-TL-M = python synth.py -m
A-TL = python synth.py -a -i 4 -l 2
A-TL-M = python synth.py -a -i 4 -l 2 -m
